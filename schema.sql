-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS address
(
    id uuid NOT NULL,
    country_id integer NOT NULL,
    country_state_id integer NOT NULL,
    state_city_id integer NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS chat
(
    id text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chat_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS chat_reply
(
    id uuid NOT NULL,
    chat_id text COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content character varying(255) COLLATE pg_catalog."default" NOT NULL,
    seen boolean NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT chat_reply_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS complaint
(
    id uuid NOT NULL,
    author_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    receiver_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    complaint_status character varying(15) COLLATE pg_catalog."default" NOT NULL,
    title character varying(80) COLLATE pg_catalog."default" NOT NULL,
    complaint_description character varying(120) COLLATE pg_catalog."default" NOT NULL,
    body character varying(250) COLLATE pg_catalog."default" NOT NULL,
    rating_rate integer,
    rating_comment character varying(250) COLLATE pg_catalog."default",
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT complaints_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS complaint_replies
(
    id uuid NOT NULL,
    complaint_id uuid NOT NULL,
    author_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    body character varying(250) COLLATE pg_catalog."default" NOT NULL,
    read_status boolean NOT NULL,
    read_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_enterprise boolean NOT NULL,
    enterprise_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT replies_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS country
(
    id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    iso3 character varying(10) COLLATE pg_catalog."default",
    numeric_code integer,
    iso2 character varying(10) COLLATE pg_catalog."default",
    phonecode character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT countries_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS country_states
(
    id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    country_id integer,
    country_code character varying(10) COLLATE pg_catalog."default",
    fips_code character varying(10) COLLATE pg_catalog."default",
    iso2 character varying(10) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT states_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS employee
(
    employee_id uuid NOT NULL,
    enterprise_id character varying(120) COLLATE pg_catalog."default" NOT NULL,
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    hiring_date character varying(255) COLLATE pg_catalog."default" NOT NULL,
    approved_hiring boolean NOT NULL,
    approved_hiring_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    job_position character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT employee_pkey PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS enterprise
(
    enterprise_id character varying(120) COLLATE pg_catalog."default" NOT NULL,
    owner_user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    logo_img character varying(255) COLLATE pg_catalog."default" NOT NULL,
    banner_img character varying(255) COLLATE pg_catalog."default" NOT NULL,
    website character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(21) COLLATE pg_catalog."default" NOT NULL,
    industry_id integer NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    foundation_date character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_id uuid NOT NULL,
    CONSTRAINT enterprise_pkey PRIMARY KEY (enterprise_id)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id uuid NOT NULL,
    event_body json NOT NULL,
    occurred_on character varying(255) COLLATE pg_catalog."default" NOT NULL,
    type_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT events_pkey PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS events_log
(
    event_id uuid NOT NULL,
    event_body json NOT NULL,
    occurred_on character varying(255) COLLATE pg_catalog."default" NOT NULL,
    type_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT events_log_pkey PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS feedback
(
    id uuid NOT NULL,
    complaint_id uuid NOT NULL,
    enterprise_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    reviewed_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_done boolean NOT NULL,
    CONSTRAINT feedback_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS feedback_answers
(
    id uuid NOT NULL,
    feedback_id uuid NOT NULL,
    sender_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    answer_body character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    read_status boolean NOT NULL,
    read_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_enterprise boolean NOT NULL DEFAULT false,
    enterprise_id character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT feedback_answers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS feedback_replies
(
    id uuid NOT NULL,
    reply_review_id uuid NOT NULL,
    reply_id uuid NOT NULL,
    CONSTRAINT feedback_replies_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS feedback_reply_review
(
    id uuid NOT NULL,
    feedback_id uuid NOT NULL,
    review_id uuid NOT NULL,
    color character varying(255) COLLATE pg_catalog."default" NOT NULL,
    reviewer_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT feedback_reply_review_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS feedback_reviews
(
    id uuid NOT NULL,
    review_comment character varying(255) COLLATE pg_catalog."default" NOT NULL,
    feedback_id uuid NOT NULL,
    CONSTRAINT feedback_reviews_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS industry
(
    industry_id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT industry_pkey PRIMARY KEY (industry_id)
);

CREATE TABLE IF NOT EXISTS notification
(
    notification_id uuid NOT NULL,
    owner_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    thumbnail character varying(255) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content character varying(255) COLLATE pg_catalog."default" NOT NULL,
    link character varying(255) COLLATE pg_catalog."default" NOT NULL,
    occurred_on character varying(255) COLLATE pg_catalog."default" NOT NULL,
    seen boolean NOT NULL,
    CONSTRAINT notification_pkey PRIMARY KEY (notification_id)
);

CREATE TABLE IF NOT EXISTS person
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    birth_date character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(21) COLLATE pg_catalog."default" NOT NULL,
    profile_img character varying(255) COLLATE pg_catalog."default" NOT NULL,
    gender character varying(255) COLLATE pg_catalog."default" NOT NULL,
    pronoun character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_id uuid NOT NULL,
    CONSTRAINT persons_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS roles
(
    role_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (role_name)
);

CREATE TABLE IF NOT EXISTS solved_by
(
    id uuid NOT NULL,
    complaint_id uuid NOT NULL,
    solved_by_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    solved_at character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT solved_by_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS state_cities
(
    id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    state_id integer,
    state_code character varying(10) COLLATE pg_catalog."default",
    country_id integer,
    country_code character varying(10) COLLATE pg_catalog."default",
    latitude double precision,
    longitude double precision,
    CONSTRAINT cities_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "user"
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    register_date character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_confirmed boolean NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS user_role
(
    user_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    enterprise_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id, enterprise_id)
);
END;